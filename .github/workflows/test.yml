name: Test

on:
  push:
    branches-ignore: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - id: compute_tag
      uses: craig-day/compute-tag@v10
      with:
        github_token: ${{ github.token }}
        version_scheme: semantic

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: test
    - env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        cat release.config.js
        npx semantic-release --dry-run
        # go test -coverprofile=go.txt -v ./...
        # go run main.go
        # go run main.go version
        # go run main.go events
        # go run main.go events -o table
        # go run main.go events -d
        # go run main.go events -o json
        # echo "--------------------------------------------------"
        # go build -ldflags="-X 'github.com/karl-cardenas-coding/disaster-cli/cmd.VersionString=${{ steps.compute_tag.outputs.next_tag }}'" -o=disaster -v
        # ./disaster events -d
        # ./disaster events -o table
        # ./disaster events -o json
        # ./disaster version
    - uses: actions/upload-artifact@v1
      with:
        name: test-results
        path: go.txt
